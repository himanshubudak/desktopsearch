#include<iostream>
#include<fstream>  ///////.............
#include "fileList.h"
#include "Btree.h"
#include "key.h"
#include "bnode.h"
#include "tries.h"
#include "random.h"
#include<list>
#include<string>
#include<vector>
using namespace std;

main()
{
	/**********************Creating indexes ******************************/
	
	ifstream iput;
	int updateCounter=5; //to update index files 
	int n=10;	// display list size
	
	
	int flag=0,flag1=0;
	FILE* fp;
	fp=fopen("counter.txt","r");
	if(fp==NULL)
	{
		flag=1;
	}
	else
		fclose(fp);

	if(flag==1)
	{
		int k=1;
		fp=fopen("counter.txt","w");
		fprintf(fp,"%i",k);
		fclose(fp);
	}
	else
	{
		
		iput.open("counter.txt");
		int count;
		iput>>count;
		iput.close();
		
		if(count>=updateCounter)
		{
		//	callFileList();
			flag1=1;
			count=-1;
		}
		count++;
		
		fp=fopen("counter.txt","w+");
		fprintf(fp,"%i",count);
		fclose(fp);
	}
	
	if(flag1==1 || flag==1)
		callFileList();

/*********************Reading in B-tree**************************************/
	Btree b1(3);
	callBtree(b1);


/*	key* kk=new key;
	kk=b1.search("Pictures");
	if(kk!=NULL)
		cout<<kk->name<<"   "<<kk->address<<endl;
	else
		cout<<555<<endl;

/********************Reading files in Prefix -trie********************************/	
		
		tries t2;
		callPrefixTrie(t2);

/*************************history trie*****************************************/		

		tries t1;
		callHistoryTrie(t1);
				
/**************************************************************/
/*		string str;
		cout<<"enter the string :"<<endl;
		cin>>str;
		 
		vector<fax*> star;
		star=process(str,t2,t1,n);
		
/*		for(int i=0;i<star.size();i++)
		{
			cout<<star[i]->nam<<endl;
		}
*/		 
/*		fax* fax1=new fax("rhythmbox-client","##");
		show(fax1,t2,t1);
		onClose(t1);
*/
}
