#############################################################################
# Makefile for building: finder
# Generated by qmake (2.01a) (Qt 4.6.2) on: Sat Nov 17 11:48:01 2012
# Project:  finder.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile finder.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = bnode.cpp \
		Btree.cpp \
		fileList.cpp \
		key.cpp \
		main.cpp \
		mybutton.cpp \
		piechartqt.cpp \
		random.cpp \
		tries.cpp moc_mybutton.cpp \
		moc_piechartqt.cpp
OBJECTS       = bnode.o \
		Btree.o \
		fileList.o \
		key.o \
		main.o \
		mybutton.o \
		piechartqt.o \
		random.o \
		tries.o \
		moc_mybutton.o \
		moc_piechartqt.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		finder.pro
QMAKE_TARGET  = finder
DESTDIR       = 
TARGET        = finder

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: finder.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile finder.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile finder.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/finder1.0.0 || $(MKDIR) .tmp/finder1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/finder1.0.0/ && $(COPY_FILE) --parents bnode.h Btree.h fileList.h key.h mybutton.h piechartqt.h random.h tries.h .tmp/finder1.0.0/ && $(COPY_FILE) --parents bnode.cpp Btree.cpp fileList.cpp key.cpp main.cpp mybutton.cpp piechartqt.cpp random.cpp tries.cpp .tmp/finder1.0.0/ && (cd `dirname .tmp/finder1.0.0` && $(TAR) finder1.0.0.tar finder1.0.0 && $(COMPRESS) finder1.0.0.tar) && $(MOVE) `dirname .tmp/finder1.0.0`/finder1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/finder1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mybutton.cpp moc_piechartqt.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mybutton.cpp moc_piechartqt.cpp
moc_mybutton.cpp: random.h \
		fileList.h \
		bnode.h \
		tries.h \
		mybutton.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mybutton.h -o moc_mybutton.cpp

moc_piechartqt.cpp: tries.h \
		random.h \
		fileList.h \
		bnode.h \
		mybutton.h \
		piechartqt.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) piechartqt.h -o moc_piechartqt.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

bnode.o: bnode.cpp bnode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bnode.o bnode.cpp

Btree.o: Btree.cpp Btree.h \
		key.h \
		bnode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Btree.o Btree.cpp

fileList.o: fileList.cpp fileList.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fileList.o fileList.cpp

key.o: key.cpp key.h \
		bnode.h \
		Btree.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o key.o key.cpp

main.o: main.cpp fileList.h \
		Btree.h \
		key.h \
		bnode.h \
		tries.h \
		random.h \
		piechartqt.h \
		mybutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mybutton.o: mybutton.cpp mybutton.h \
		random.h \
		fileList.h \
		bnode.h \
		tries.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mybutton.o mybutton.cpp

piechartqt.o: piechartqt.cpp piechartqt.h \
		tries.h \
		random.h \
		fileList.h \
		bnode.h \
		mybutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o piechartqt.o piechartqt.cpp

random.o: random.cpp random.h \
		fileList.h \
		bnode.h \
		tries.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o random.o random.cpp

tries.o: tries.cpp tries.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tries.o tries.cpp

moc_mybutton.o: moc_mybutton.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mybutton.o moc_mybutton.cpp

moc_piechartqt.o: moc_piechartqt.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_piechartqt.o moc_piechartqt.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

